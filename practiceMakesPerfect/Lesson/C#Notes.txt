using System;
namespace practiceMakesPerfect.Lesson
{
 public class C_
 {
     public C_()
     {

      


      Console.ReadKey();

      Console.Writeline(); -  THIS IS USED TO PRINT SOMETHING TO THE SCREEN FOR USER, YOU CAN PUT ANYTHING IN THE CONSOLE WRITELINE
                              AS LONG AS YOU USE THE CORRECT DATA TYPE.

      Console.Readline();  -  THIS IS TELLING THE COMPUTER TO WAIT AND LET THE USER ENTER SOMETHING,THIS IS USED TO GET INFORMATION FROM
                              THE USER, EXAMPLE: IF I ASK THE USER TO INPUT THERE FIRST NAME
                              THE CONSOLE READLINE WILL ALLOW THE USER TO THEN INPUT THERE FIRST NAME, THAT WILL THEN BE RETURNED TO ME.

      Consol.Write();      -  
                   

      Console.Read();      _


      Console.Clear();     -  THIS IS USED TO CLEAR EVERTHING PREVEOUSLY OUTPUTTED AND INPUTTED BEFORE POINT OF USE,
                              ANYTHING THAT HAS BEEN PRINTED TO SCREEN BEFORE HAND WILL BE CLEARED.

      Console.ToLower      - 


      Methods & Functions: -  A BLOCK OF CODE THAT HAS A NAME,A PIECE OF CODE THAT WE PACKAGE TOGETHER AND USE AS A METHOD FOR
                              A FUNCTUALITY THAT WE CAN USE MORE THEN 1 TIME, WE WILL USE A METHOD INSTEAD OF COPYING AND PASTING CODE,
                              THE METHOD IS CREATED MAINLY WITH THE PURPOSE THAT WE CAN RE-USE IT INSTEAD OF REWRITING THE SAME CODE OVER
                              AND OVER AGAIN OR COPY AND PASTING AGAIN AND AGAIN.A CLASS IS A CONTAINER FOR ALL OUR METHODS FOR OUR APPLICATION
                              ITS A WAY TO ORGANISE OUR APPLICATION 

       Method Overload     -  WHEN WE HAVE THE SAME METHOD RETURN TYPE, SAME METHOD NAME BUT DIFFERENT ARGUMENTS IN THE PARAMETER
                              EXAMPLE: (STRING,STRING) (STRING), THIS WOULD BE OVERLOADING BECAUSE THEY WOULD HAVE THE SAME NAME
                              SAME METHOD BUT DIFFERENT ARGUMENTS IN THE PARAMETER AS ONE WOULD HAVE 2 STRINGS AND THE OTHER HAS 1

       METHOD OVERRIDING

                      

       REMAINDER:          -  EXAMPLE: Console.WriteLine(100% 29) WOULD PRINT 13, WE CHOOSE A PERCENTAGE THEN WE ADD A NUMBER
                              THEN WE ADD THE NUMBER THAT WE WANT TO USE, FROM THE EXAMPLE 29 WILL GO INTO 100% 3 TIMES BUT
                              WILL LEAVE A REMAINDER OF 13, 29 X 3 = 87 LEAVING A REMAINDER OF 13 THAT WILL BE PRINTED


       CLASSES             -  A CLASS IS SOMEWHERE WE USE TO MAKE FIELDS AND METHODS,WE CAN HAVE HUNDREDS OF DIFFERNET CLASS NAMES
                              DOING DIFFERENT THINGS,OBJECTS ARE THE COPY OF THE BLUEPRINT OR TEMPLATE OF A CLASS THAT HOLD DIFFERENT
                              VERIABALS METHODS,IF THE ACCESS MODIFIER IS SET TO PRIVERT THEN THAT METHOD OR VERIABLE ACN ONLY BE USED
                              IN THE CLASS IT WAS MADE IN,IF THE ACCESS MODIFIER IS SET TO PUBLIC THEN WE CAN TAKE THAT METHOD OR
                              VERIABLE AND USE IT IN ANOTHER CLASS,THE PROBLEM WITH THAT IS THE VALUES OF THE METHOD CAN BE CHANGED
                              WITH IN TURN CAN BUG THE ORIGINAL METHOD VALUES METHODS ARE PIECES OF CODE PUT TOGETHER FOR SHORTCUT
                              PURPOSSES TO STOP U FROM COPY AND PASTING CODE.

      CONSTRUCTORS


     }
 }
}
